@page "/settings"
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Logging
@using Models
@using Options
@using Services

<EditForm Model="@BotSettings" OnValidSubmit="@HandleValidSubmit">
    <h1>Settings</h1>
    <hr />
    <h2>Twitch</h2>
    <div class="form-group row">
        <label for="twitch-Enabled" class="col-sm-2 col-form-label">
            Enabled:
        </label>
        <div class="col-sm-10">
            <InputCheckbox id="twitch-Enabled" class="form-control"
                       @bind-Value="BotSettings.Twitch.Enabled" />
        </div>
    </div>
    <div class="form-group row">
        <label for="twitch-botusername" class="col-sm-2 col-form-label">
            Bot Username:
        </label>
        <div class="col-sm-10">
            <InputText id="twitch-botusername" class="form-control" placeholder="Bot Username"
                       @bind-Value="BotSettings.Twitch.BotUsername" />
        </div>
    </div>
    <div class="form-group row">
        <label for="twitch-botircpassword" class="col-sm-2 col-form-label">
            Bot IRC Password (<a href="https://twitchapps.com/tmi/" target="_new">Generate</a>):
        </label>
        <div class="col-sm-10">
            <InputText type="password" id="twitch-botircpassword" class="form-control" placeholder="IRC Password"
                       @bind-Value="BotSettings.Twitch.BotIrcPassword" />
        </div>
    </div>
    <div class="form-group row">
        <label for="twitch-streamerusername" class="col-sm-2 col-form-label">
            Streamer Username:
        </label>
        <div class="col-sm-10">
            <InputText id="twitch-streamerusername" class="form-control" placeholder="Streamer Username"
                       @bind-Value="BotSettings.Twitch.StreamerUsername" />
        </div>
    </div>
    <div class="form-group row">
        <label for="twitch-channels" class="col-sm-2 col-form-label">
            Channels:
        </label>
        <div class="col-sm-10">
            <InputTextArea id="twitch-channels" class="form-control" placeholder="markekraus" rows="10"
                       @bind-Value="channels" />
        </div>
    </div>
    <hr />
    <h2>Spotify</h2>
    <div class="form-group row">
        <label for="spotify-Enabled" class="col-sm-2 col-form-label">
            Enabled:
        </label>
        <div class="col-sm-10">
            <InputCheckbox id="spotify-Enabled" class="form-control"
                       @bind-Value="BotSettings.Spotify.Enabled" />
        </div>
    </div>
    <div class="form-group row">
        <label for="spotify-clientid" class="col-sm-2 col-form-label">
            Spotify Client ID: <br />
            (<a href="https://developer.spotify.com/dashboard/applications">Create New Spotify Application</a>)
        </label>
        <div class="col-sm-10">
            <InputText id="spotify-clientid" class="form-control" placeholder="create a Spotify application"
                       @bind-Value="BotSettings.Spotify.ClientId" />
        </div>
    </div>
    <div class="form-group row">
        <label for="spotify-clientsecret" class="col-sm-2 col-form-label">
            Spotify Client Secret:
        </label>
        <div class="col-sm-10">
            <InputText type="password" id="spotify-clientsecret" class="form-control" placeholder="create a Spotify application"
                       @bind-Value="BotSettings.Spotify.ClientSecret" />
        </div>
    </div>
    <div class="form-group row">
        <button type="submit" class="btn btn-primary">Update</button>
    </div>
</EditForm>

@code {
    [Inject]
    public IConfiguration configuration { get; set; }
    [Inject]
    public ILogger<Settings> _logger { get; set; }
    [Inject]
    public SettingsHelper _settingsHelper {get; set; }
    public BotSettings BotSettings { get; set; } = new BotSettings();
    public string channels { get; set; } = "markekraus";
    protected async override Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            configuration.GetSection(TwitchOptions.Section).Bind(BotSettings.Twitch);
            configuration.GetSection(SpotifyOptions.Section).Bind(BotSettings.Spotify);
            channels = string.Join("\n", BotSettings.Twitch.Channels);
        });
    }
    private void HandleValidSubmit()
    {
        BotSettings.Twitch.Channels = channels.Split("\n").ToList<string>();
        _settingsHelper.AddOrUpdateAppSetting<TwitchOptions>(TwitchOptions.Section, BotSettings.Twitch);
        _settingsHelper.AddOrUpdateAppSetting<SpotifyOptions>(SpotifyOptions.Section, BotSettings.Spotify);
    }
}